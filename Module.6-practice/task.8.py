# region {===== my cod =====}

# Загаданное число находится в диапазоне от 1 до 100
low = 1
high = 100

# Цикл выполняется не более 7 раз, так как гарантировано угадывает число за 7 попыток
for count_try in range(7):
    # Вычисляем середину диапазона
    middle = (low + high) // 2

    # Задаем вопрос мальчику
    print("Твое число равно, меньше или больше, чем число ", middle, "?")
    answer = int(input("Введите 1 - равно, 2 - больше, 3 - меньше: "))

    # Обновляем диапазон в зависимости от ответа
    if answer == 1:
        print("Я угадал! Твое число ",middle,)
        break
    elif answer == 2:
        low = middle + 1
    elif answer == 3:
        high = middle - 1

# Если за 7 попыток не угадали, то выводим сообщение об ошибке
else:
    print("Я не смог угадать твое число.")


# upper_bound = 100
# lower_bound = 1
#
# while True:
# 	# среднее число между верхней и нижней границой
# 	letter = (upper_bound + lower_bound) // 2
#
# 	print("твое число  больше,  меньше или равно числу", letter, "?")
# 	input_key = int(input("1- больше, 2 - меньше, 3 = равно"))
#
# 	# если пользователь ввел 1
# 	if input_key == 1:
# 		lower_bound = letter + 1
#
# 	# если пользователь ввел 3
# 	# когда число подходт к этим границам + и - становятся меньше еденицы
# 	elif letter == 3:
# 		letter -= 1
#
# 	elif letter == 2:
# 		letter -= 1
#
# 	elif letter == 98:
# 		letter + 1
#
# 	elif letter == 99:
# 		letter + 1
#
# 	# если пользователь ввел 2
# 	elif input_key == 2:
# 		upper_bound = letter - 1
#
# 	# если пользователь ввел 3
# 	elif input_key == 3:
# 		print("Я угадал")
# 		break

# endregion {===== my cod =====}


# region {===== Основной код =====}



# endregion {===== Основной код =====}


# region {===== Optimal code =====}

print('Задача 8. Игра «Компьютер угадывает число»')

# Поменяйте мальчика и компьютер из прошлой задачи местами.
# Теперь мальчик загадывает число между 1 и 100 (включительно).
# Компьютер может спросить у мальчика:
# «Твое число равно, меньше или больше, чем число N?»,
# где N — число, которое хочет проверить компьютер.
# Мальчик отвечает одним из трёх чисел:
# 1 — равно,
# 2 — больше,
# 3 — меньше.

# Напишите программу,
# которая с помощью цепочки таких вопросов и ответов мальчика угадывает число.

# Дополнительно: сделайте так, чтобы можно было гарантированно угадать число за семь попыток.

# Подсказка: При желании найдите описание алгоритма бинарного поиска и попробуйте применить в этой задаче.
# Разбор подобного решения будет в следующем модуле.


# РЕШЕНИЕ
# =============================

# Получение данных
left_num = 0  # наименьшее число в поиске
middle_num = 0  # среднеарифметическое число в поиске
right_num = 100  # наибольшее число в поиске
find = True  # флаг работы цикла
counter = 0  # число попыток
reply = int  # ответ игрока на вопрос в поиске

print()
print('Правила игры:')
print()
print('Загадай число от 1 до 100 включительно.')
print()
print('Нажми клавишу:')
print('1 - загаданное число равно указанному;')
print('2 - загаданное число больше указанного;')
print('3 - загаданное число меньше указанного;')

# среднее арифметическое диапазона
middle_num = (1 + 100) // 2

while find:
	print()
	# ответ игрока
	reply = int(input('1 - число равно, 2 - число больше, 3 - число меньше, чем '
					  + str(middle_num) + ': '))
	# счетчик +1
	counter += 1

	# загаданное число равно middle_num
	if reply == 1:
		print()
		print('загаданное число равно', middle_num)
		print('Количество попыток:', counter)
		print('Игра окончена!')
		find = False

	# загаданное число меньше middle_num
	elif reply == 3:
		right_num = middle_num
		middle_num = (left_num + right_num) // 2

	# загаданное число больше middle_num
	elif reply == 2:
		left_num = middle_num
		middle_num = (left_num + right_num) // 2

# =============================

# endregion {===== Optimal code =====}